basePath: /v1
definitions:
  base.Archetyped:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      archetype_id:
        type: string
      rm_version:
        type: string
      template_id:
        description: TODO why link?
        type: string
    type: object
  base.CodePhrase:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      code_string:
        type: string
      preferred_term:
        type: string
      terminology_id:
        type: string
    type: object
  base.DvCodedText:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      defining_code:
        $ref: '#/definitions/base.CodePhrase'
      encoding:
        $ref: '#/definitions/base.CodePhrase'
      formatting:
        type: string
      hyperlink:
        $ref: '#/definitions/base.DvURI'
      language:
        $ref: '#/definitions/base.CodePhrase'
      mappings:
        items:
          $ref: '#/definitions/base.TermMapping'
        type: array
      value:
        type: string
    type: object
  base.DvDateTime:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      accuracy:
        $ref: '#/definitions/base.DvDuration'
      value:
        type: string
    type: object
  base.DvDuration:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      accuracy: {}
      accuracy_is_percent:
        type: boolean
      magnitude_status:
        type: boolean
      normal_range:
        $ref: '#/definitions/base.DvInterval-int64'
      normal_status:
        $ref: '#/definitions/base.CodePhrase'
      other_reference_ranges:
        items:
          $ref: '#/definitions/base.ReferenceRange-int64'
        type: array
      value:
        type: string
    type: object
  base.DvEncapsulated:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      charset:
        $ref: '#/definitions/base.CodePhrase'
      language:
        $ref: '#/definitions/base.CodePhrase'
    type: object
  base.DvIdentifier:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      assigner:
        type: string
      id:
        type: string
      issuer:
        type: string
      type:
        type: string
    type: object
  base.DvInterval-int64:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      lower:
        type: integer
      lower_included:
        type: boolean
      lower_unbounded:
        type: boolean
      upper:
        type: integer
      upper_included:
        type: boolean
      upper_unbounded:
        type: boolean
    type: object
  base.DvText:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      encoding:
        $ref: '#/definitions/base.CodePhrase'
      formatting:
        type: string
      hyperlink:
        $ref: '#/definitions/base.DvURI'
      language:
        $ref: '#/definitions/base.CodePhrase'
      mappings:
        items:
          $ref: '#/definitions/base.TermMapping'
        type: array
      value:
        type: string
    type: object
  base.DvURI:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      value:
        type: string
    type: object
  base.FeederAudit:
    properties:
      feeder_system_audit:
        $ref: '#/definitions/base.FeederAuditDetails'
      feeder_system_item_ids:
        items:
          $ref: '#/definitions/base.DvIdentifier'
        type: array
      original_content:
        $ref: '#/definitions/base.DvEncapsulated'
      originating_system_audit:
        $ref: '#/definitions/base.FeederAuditDetails'
      originating_system_item_ids:
        items:
          $ref: '#/definitions/base.DvIdentifier'
        type: array
    type: object
  base.FeederAuditDetails:
    properties:
      location:
        $ref: '#/definitions/base.PartyIdentified'
      other_details:
        $ref: '#/definitions/base.Locatable'
      provider:
        $ref: '#/definitions/base.PartyIdentified'
      subject:
        $ref: '#/definitions/base.PartyProxy'
      system_id:
        type: string
      time:
        $ref: '#/definitions/base.DvDateTime'
      version_id:
        type: string
    type: object
  base.Interval-base_DvDateTime:
    properties:
      lower:
        $ref: '#/definitions/base.DvDateTime'
      lower_included:
        type: boolean
      lower_unbounded:
        type: boolean
      upper:
        $ref: '#/definitions/base.DvDateTime'
      upper_included:
        type: boolean
      upper_unbounded:
        type: boolean
    type: object
  base.Interval-int64:
    properties:
      lower:
        type: integer
      lower_included:
        type: boolean
      lower_unbounded:
        type: boolean
      upper:
        type: integer
      upper_included:
        type: boolean
      upper_unbounded:
        type: boolean
    type: object
  base.ItemStructure:
    type: object
  base.ItemType:
    enum:
    - EHR
    - ACTION
    - AUDIT_DETAILS
    - ACTIVITY
    - ARCHETYPED
    - ARCHETYPE_ID
    - CLUSTER
    - CODE_PHRASE
    - COMPOSITION
    - CONTRIBUTION
    - DV_BOOLEAN
    - DV_CODED_TEXT
    - DV_COUNT
    - DV_DATE
    - DV_DATE_TIME
    - DV_DURATION
    - DV_IDENTIFIER
    - DV_INTERVAL
    - DV_MULTIMEDIA
    - DV_ORDERED
    - DV_PARAGRAPH
    - DV_PARSABLE
    - DV_PROPORTION
    - DV_STATE
    - DV_QUANTITY
    - DV_TEXT
    - DV_TIME
    - DV_URI
    - EHR_ACCESS
    - EHR_STATUS
    - ELEMENT
    - EVALUATION
    - EVENT_CONTEXT
    - GENERIC_ID
    - HIER_OBJECT_ID
    - HISTORY
    - INSTRUCTION
    - ISM_TRANSITION
    - ITEM_SINGLE
    - ITEM_LIST
    - ITEM_TABLE
    - ITEM_TREE
    - OBJECT_VERSION_ID
    - OBSERVATION
    - PARTICIPATION
    - PARTY_IDENTIFIED
    - PARTY_REF
    - PARTY_SELF
    - PARTY_RELATED
    - POINT_EVENT
    - INTERVAL_EVENT
    - SECTION
    - TEMPLATE_ID
    - TERMINOLOGY_ID
    - ORIGINAL_VERSION
    - IMPORTED_VERSION
    - VERSIONED_COMPOSITION
    - UID_BASED_ID
    - FOLDER
    type: string
    x-enum-varnames:
    - EHRItemType
    - ActionItemType
    - AuditDetailsType
    - ActivityItemType
    - ArchetypedItemType
    - ArchetypeIDItemType
    - ClusterItemType
    - CodePhraseItemType
    - CompositionItemType
    - ContributionItemType
    - DvBooleanItemType
    - DvCodedTextItemType
    - DvCountItemType
    - DvDateItemType
    - DvDateTimeItemType
    - DvDurationItemType
    - DvIdentifierItemType
    - DvIntervalItemType
    - DvMultimediaItemType
    - DvOrderedItemType
    - DvParagraphItemType
    - DvParsableItemType
    - DvProportionItemType
    - DvStateItemType
    - DvQuantityItemType
    - DvTextItemType
    - DvTimeItemType
    - DvURIItemType
    - EHRAccessItemType
    - EHRStatusItemType
    - ElementItemType
    - EvaluationItemType
    - EventContextItemType
    - GenericIDItemType
    - HierObjectIDItemType
    - HistoryItemType
    - InstructionItemType
    - IsmTransitionItemType
    - ItemSingleItemType
    - ItemListItemType
    - ItemTableItemType
    - ItemTreeItemType
    - ObjectVersionIDItemType
    - ObservationItemType
    - ParticipationItemType
    - PartyIdentifiedItemType
    - PartyRefItemType
    - PartySelfItemType
    - PartyRelatedItemType
    - PointEventItemType
    - IntervalEventItemType
    - SectionItemType
    - TemplateIDItemType
    - TerminologyIDItemType
    - VersionOriginalItemType
    - VersionImportedItemType
    - VersionCompositionItemType
    - UIDBasedIDItemType
    - FolderItemType
  base.Link:
    properties:
      meaning:
        $ref: '#/definitions/base.DvText'
      target:
        $ref: '#/definitions/base.DvURI'
      type:
        $ref: '#/definitions/base.DvText'
    type: object
  base.Locatable:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      archetype_details:
        $ref: '#/definitions/base.Archetyped'
      archetype_node_id:
        type: string
      links:
        items:
          $ref: '#/definitions/base.Link'
        type: array
      name:
        $ref: '#/definitions/base.DvText'
      uid:
        $ref: '#/definitions/base.UIDBasedID'
    type: object
  base.ObjectRef:
    properties:
      id:
        type: string
      namespace:
        type: string
      type:
        type: string
    type: object
  base.Participation:
    properties:
      function:
        $ref: '#/definitions/base.DvText'
      mode:
        $ref: '#/definitions/base.DvCodedText'
      performer:
        $ref: '#/definitions/base.PartyProxy'
      time:
        $ref: '#/definitions/base.Interval-base_DvDateTime'
    type: object
  base.PartyIdentified:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      external_ref:
        $ref: '#/definitions/base.ObjectRef'
      identifiers:
        items:
          $ref: '#/definitions/base.DvIdentifier'
        type: array
      name:
        type: string
    type: object
  base.PartyProxy:
    type: object
  base.ReferenceRange-int64:
    properties:
      meaning:
        type: string
      range:
        $ref: '#/definitions/base.Interval-int64'
    type: object
  base.TermMapping:
    properties:
      match:
        type: integer
      purpose:
        $ref: '#/definitions/base.DvCodedText'
      target:
        $ref: '#/definitions/base.CodePhrase'
    type: object
  base.UIDBasedID:
    properties:
      ObjectID:
        type: string
    type: object
  model.Composition:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      archetype_details:
        $ref: '#/definitions/base.Archetyped'
      archetype_node_id:
        type: string
      category:
        $ref: '#/definitions/base.DvCodedText'
      composer:
        $ref: '#/definitions/base.PartyProxy'
      content:
        items: {}
        type: array
      context:
        $ref: '#/definitions/model.EventContext'
      language:
        $ref: '#/definitions/base.CodePhrase'
      links:
        items:
          $ref: '#/definitions/base.Link'
        type: array
      name:
        $ref: '#/definitions/base.DvText'
      territory:
        $ref: '#/definitions/base.CodePhrase'
      uid:
        $ref: '#/definitions/base.UIDBasedID'
    type: object
  model.Directory:
    properties:
      _type:
        $ref: '#/definitions/base.ItemType'
      archetype_details:
        $ref: '#/definitions/base.Archetyped'
      archetype_node_id:
        type: string
      details:
        $ref: '#/definitions/base.ItemStructure'
      feeder_audit:
        $ref: '#/definitions/base.FeederAudit'
      folders:
        items:
          $ref: '#/definitions/model.Directory'
        type: array
      items:
        items:
          $ref: '#/definitions/model.DirectoryItem'
        type: array
      links:
        items:
          $ref: '#/definitions/base.Link'
        type: array
      name:
        $ref: '#/definitions/base.DvText'
      uid:
        $ref: '#/definitions/base.UIDBasedID'
    type: object
  model.DirectoryItem:
    properties:
      id:
        $ref: '#/definitions/base.UIDBasedID'
      namespace:
        type: string
      type:
        $ref: '#/definitions/base.ItemType'
    type: object
  model.DocAccessDocument:
    properties:
      CID:
        type: string
      description:
        type: string
      level:
        type: string
    type: object
  model.DocAccessDocumentGroup:
    properties:
      description:
        type: string
      documents:
        items:
          $ref: '#/definitions/model.DocAccessDocument'
        type: array
      groupID:
        type: string
      level:
        type: string
      parentGroupID:
        type: string
    type: object
  model.DocAccessListResponse:
    properties:
      documentGroups:
        items:
          $ref: '#/definitions/model.DocAccessDocumentGroup'
        type: array
      documents:
        items:
          $ref: '#/definitions/model.DocAccessDocument'
        type: array
    type: object
  model.DocAccessSetRequest:
    properties:
      accessLevel:
        type: string
      cid:
        type: string
      userID:
        type: string
    type: object
  model.EhrCreateRequest:
    properties:
      _type:
        type: string
      archetype_node_id:
        type: string
      isModifiable:
        type: boolean
      isQueryable:
        type: boolean
      name:
        properties:
          value:
            type: string
        type: object
      subject:
        properties:
          external_ref:
            $ref: '#/definitions/model.ExternalRef'
        type: object
    type: object
  model.EhrDocumentItem:
    properties:
      name:
        type: string
      timeCreated:
        type: string
      uid:
        type: string
    type: object
  model.EhrStatusUpdate:
    properties:
      _type:
        type: string
      archetype_node_id:
        type: string
      is_modifiable:
        type: boolean
      is_queryable:
        type: boolean
      name:
        properties:
          value:
            type: string
        type: object
      other_details:
        properties:
          _type:
            type: string
          archetype_node_id:
            type: string
          items:
            items: {}
            type: array
          name:
            properties:
              value:
                type: string
            type: object
        type: object
      subject:
        properties:
          external_ref:
            $ref: '#/definitions/model.ExternalRef'
        type: object
      uid:
        properties:
          _type:
            type: string
          value:
            type: string
        type: object
    type: object
  model.EhrSummary:
    properties:
      ehr_access:
        properties:
          id:
            type: string
          namespace:
            type: string
          type:
            type: string
        type: object
      ehr_id:
        type: string
      ehr_status:
        properties:
          id:
            type: string
          namespace:
            type: string
          type:
            type: string
        type: object
      system_id:
        type: string
      time_created:
        properties:
          value:
            type: string
        type: object
    type: object
  model.EventContext:
    properties:
      end_time:
        $ref: '#/definitions/base.DvDateTime'
      health_care_facility:
        $ref: '#/definitions/base.PartyIdentified'
      location:
        type: string
      other_context:
        $ref: '#/definitions/base.ItemStructure'
      participations:
        items:
          $ref: '#/definitions/base.Participation'
        type: array
      setting:
        $ref: '#/definitions/base.DvCodedText'
      start_time:
        $ref: '#/definitions/base.DvDateTime'
    type: object
  model.ExternalRef:
    properties:
      id:
        properties:
          _type:
            type: string
          scheme:
            type: string
          value:
            type: string
        type: object
      namespace:
        type: string
      type:
        type: string
    type: object
  model.JWT:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  model.QueryColumn:
    properties:
      name:
        type: string
      path:
        type: string
    type: object
  model.QueryRequest:
    properties:
      ehr_id:
        type: string
      fetch:
        type: integer
      offset:
        type: integer
      q:
        type: string
      query_parameters:
        additionalProperties: true
        type: object
    type: object
  model.QueryResponse:
    properties:
      columns:
        items:
          $ref: '#/definitions/model.QueryColumn'
        type: array
      meta:
        properties:
          _created:
            type: string
          _executed_aql:
            type: string
          _generator:
            type: string
          _href:
            type: string
          _schema_version:
            type: string
          _type:
            type: string
        type: object
      name:
        type: string
      q:
        type: string
      rows:
        items: {}
        type: array
    type: object
  model.QueryType:
    enum:
    - AQL
    type: string
    x-enum-varnames:
    - QueryTypeAQL
  model.StoredQuery:
    properties:
      name:
        type: string
      q:
        type: string
      saved:
        type: string
      type:
        $ref: '#/definitions/model.QueryType'
      version:
        type: string
    type: object
  model.Template:
    properties:
      archetype_id:
        type: string
      concept:
        type: string
      created_timestamp:
        type: string
      template_id:
        type: string
      version:
        type: string
    type: object
  model.UserAuthRequest:
    properties:
      password:
        type: string
      userID:
        type: string
    type: object
  model.UserCreateRequest:
    properties:
      address:
        type: string
      description:
        type: string
      name:
        type: string
      password:
        type: string
      pictureURL:
        type: string
      role:
        type: integer
      userID:
        type: string
    type: object
  model.UserGroup:
    properties:
      description:
        type: string
      groupID:
        type: string
      members:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  model.UserInfo:
    properties:
      address:
        type: string
      code:
        type: string
      description:
        type: string
      ehrID:
        type: string
      name:
        type: string
      pictureURL:
        type: string
      role:
        type: string
      timeCreated:
        type: string
      userID:
        type: string
    type: object
  processing.EthereumTx:
    properties:
      Kind:
        type: string
      Status:
        type: string
      comment:
        type: string
      hash:
        type: string
    type: object
  processing.FileCoinTx:
    properties:
      Kind:
        type: string
      Status:
        type: string
      cid:
        type: string
      comment:
        type: string
      dealCID:
        type: string
      dealID:
        type: integer
      minerAddress:
        type: string
    type: object
  processing.RequestResult:
    properties:
      ethereum:
        items:
          $ref: '#/definitions/processing.EthereumTx'
        type: array
      filecoin:
        items:
          $ref: '#/definitions/processing.FileCoinTx'
        type: array
      kind:
        type: string
      status:
        type: string
    type: object
  processing.RequestsResult:
    additionalProperties:
      $ref: '#/definitions/processing.RequestResult'
    type: object
host: localhost:8080
info:
  contact:
    email: support@bsn.si
    name: API Support
    url: https://bsn.si/blockchain
  description: The IPEHR Gateway is an openEHR compliant EHR server implementation
    that stores encrypted medical data in a Filecoin distributed file storage.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: IPEHR Gateway API
  version: "0.2"
paths:
  /access/document:
    post:
      consumes:
      - application/json
      description: |-
        Sets access to the document with the specified CID for the user with the userID.
        Possible access levels: `owner`, `admin`, `read`, `noAccess`
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      - description: DTO with data to create group access
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.DocAccessSetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Indicates that the request to change the level of access to
            the document was successfully created
        "400":
          description: Is returned when the request has invalid content.
        "404":
          description: 'Is returned when the userID for which access is set is not
            found '
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Set user access to the document
      tags:
      - ACCESS
  /access/document/:
    get:
      consumes:
      - application/json
      description: Returns the list of documents available to the user
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DocAccessListResponse'
        "400":
          description: Is returned when the request has invalid content.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get a document access list
      tags:
      - ACCESS
  /definition/query/{qualified_query_name}:
    get:
      consumes:
      - application/json
      description: |-
        Retrieves list of all stored queries on the system matched by qualified_query_name as pattern.
        https://specifications.openehr.org/releases/ITS-REST/latest/definition.html#tag/Query/operation/definition_query_list
      parameters:
      - description: 'If pattern should given be in the format of [{namespace}::]{query-name},  and  when  is  empty,  it  will  be  treated  as  '
        in: path
        name: qualified_query_name
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.StoredQuery'
            type: array
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get list stored queries
      tags:
      - DEFINITION
    put:
      consumes:
      - application/json
      description: https://specifications.openehr.org/releases/ITS-REST/latest/definition.html#tag/Query/operation/definition_query_store.yaml
      parameters:
      - description: 'If pattern should given be in the format of [{namespace}::]{query-name},
          and when is empty, it will be treated as '
        in: path
        name: qualified_query_name
        required: true
        type: string
      - description: Parameter indicating the query language/type
        in: query
        name: query_type
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Is returned when the query was successfully stored.
        "400":
          description: Is returned when the server was unable to store the query.
            This could be due to incorrect request body (could not be parsed, etc),
            unknown query type, etc.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Stores a new query, or updates an existing query on the system
      tags:
      - DEFINITION
  /definition/query/{qualified_query_name}/{version}:
    get:
      description: |-
        Retrieves the definition of a particular stored query (at specified version) and its associated metadata.
        https://specifications.openehr.org/releases/ITS-REST/latest/definition.html#tag/Query/operation/definition_query_list
      parameters:
      - description: 'If pattern should given be in the format of [{namespace}::]{query-name},  and  when  is       empty,  it       will     be  treated  as    '
        in: path
        name: qualified_query_name
        type: string
      - description: A SEMVER version number. This can be a an exact version (e.g.
          1.7.1),     or   a     pattern  as      partial  prefix,  in  a        form  of          {major}  or   {major}.{minor}  (e.g.
          1 or 1.0),  in  which  case  the  highest  (latest)  version  matching  the  prefix  will  be  considered.
        in: path
        name: version
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StoredQuery'
        "400":
          description: Is returned when the request has invalid content.
        "404":
          description: Is returned when a stored query with {qualified_query_name}  and  {version}  does  not  exist.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get stored query by version
      tags:
      - DEFINITION
    put:
      consumes:
      - application/json
      description: https://specifications.openehr.org/releases/ITS-REST/latest/definition.html#tag/Query/operation/definition_query_store.yaml
      parameters:
      - description: 'If pattern should given be in the format of [{namespace}::]{query-name},  and  when  is       empty,  it       will     be  treated  as    '
        in: path
        name: qualified_query_name
        required: true
        type: string
      - description: A SEMVER version number. This can be a an exact version (e.g.
          1.7.1),     or   a     pattern  as      partial  prefix,  in  a        form  of          {major}  or   {major}.{minor}  (e.g.
          1 or 1.0),  in  which  case  the  highest  (latest)  version  matching  the  prefix  will  be  considered
        in: path
        name: version
        required: true
        type: string
      - description: Parameter indicating the query language/type
        in: query
        name: query_type
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Is returned when the query was successfully stored
        "400":
          description: Is returned when the server was unable to store the query.
            This could be due to incorrect request body (could not be parsed, etc),  unknown  query  type,  etc
        "409":
          description: Is returned when a query with the given 'qualified_query_name'
            and 'version' already exists on the server
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Stores a query, at a specified version, on the system.
      tags:
      - DEFINITION
  /definition/template/adl1.4:
    get:
      description: |-
        List the available ADL 1.4 operational templates (OPT) on the system.
        https://specifications.openehr.org/releases/ITS-REST/latest/definition.html#tag/ADL1.4/operation/definition_template_adl1.4_list
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Template'
            type: array
        "400":
          description: Is returned because of invalid content.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get a list of templates
      tags:
      - DEFINITION
    post:
      consumes:
      - application/xml
      description: |-
        Upload a new ADL 1.4 operational template (OPT).
        https://specifications.openehr.org/releases/ITS-REST/latest/definition.html#tag/ADL1.4/operation/definition_template_adl1.4_upload
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - default: '"return=minimal"'
        description: Request header to indicate the preference over response details.
          The response will contain the entire resource when the Prefer header has
          a value of return=representation.
        in: header
        name: Prefer
        required: true
        type: string
      produces:
      - text/plain
      - application/xml
      responses:
        "201":
          description: Is returned when the query was successfully uploaded.
          schema:
            $ref: '#/definitions/model.Template'
        "400":
          description: Is returned when unable to upload a template, because of invalid
            content.
        "409":
          description: Is returned when a template with same {template_id} (at given
            version, if supplied) already exists.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Store a template
      tags:
      - DEFINITION
  /definition/template/adl1.4/{template_id}:
    get:
      description: |-
        Retrieves the ADL 1.4 operational template (OPT) identified by {template_id} identifier.
        https://specifications.openehr.org/releases/ITS-REST/latest/definition.html#tag/ADL1.4/operation/definition_template_adl1.4_list
      parameters:
      - description: 'Template identifier. Example: Vital Signs'
        in: path
        name: template_id
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/xml
      - application/openehr.wt+json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Is returned when the request has invalid content.
        "404":
          description: Is returned when a stored query with {qualified_query_name}
            and {version} does not exist.
        "406":
          description: Is returned when template with certain ID created with other
            accept header
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get a template
      tags:
      - DEFINITION
  /ehr:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve the EHR with the specified subject_id and subject_namespace.
        These subject parameters will be matched against EHR’s
        EHR_STATUS.subject.external_ref.id.value and EHR_STATUS.subject.external_ref.namespace values.
      parameters:
      - description: 'subject id. Example: ins01'
        in: query
        name: subject_id
        required: true
        type: string
      - description: 'id namespace. Example: examples'
        in: query
        name: subject_namespace
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EhrSummary'
        "202":
          description: Is returned when the request is still being processed
        "400":
          description: Is returned when userID is empty
        "404":
          description: Is returned when an EHR with ehr_id does not exist.
      summary: Get EHR summary by subject id
      tags:
      - EHR
    post:
      consumes:
      - application/json
      description: |-
        Create a new EHR with an auto-generated identifier.
        An EHR_STATUS resource needs to be always created and committed in the new EHR. This resource MAY be also supplied by the client as the request body. If not supplied, a default EHR_STATUS will be used by the service with following attributes:
        - `is_queryable`: true
        - `is_modifiable`: true
        - `subject`: a PARTY_SELF object

        All other required EHR attributes and resources will be automatically created as needed by the [EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      - description: GroupAccessId - UUID. If not specified, the default access group
          will be used.
        in: header
        name: GroupAccessId
        type: string
      - description: The new EHR resource is returned in the body when the request’s
          `Prefer` header value is `return=representation`, otherwise only headers
          are returned.
        in: header
        name: Prefer
        required: true
        type: string
      - description: Query Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.EhrCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            ETag:
              description: 'ehr_id of created document. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
              type: string
            Location:
              description: '{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398'
              type: string
            RequestID:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/model.EhrSummary'
        "400":
          description: Is returned when the request body (if provided)  could      not  be  parsed.
        "409":
          description: Unable to create a new EHR due to a conflict with an already
            existing EHR with the same subject id, namespace pair.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Create EHR
      tags:
      - EHR
  /ehr/{ehr_id}:
    get:
      consumes:
      - application/json
      description: Retrieve the EHR with the specified ehr_id
      parameters:
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EhrSummary'
        "202":
          description: Is returned when the request is still being processed
        "400":
          description: Is returned when userID is empty
        "404":
          description: Is returned when an EHR with ehr_id does not exist.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get EHR summary by id
      tags:
      - EHR
    put:
      consumes:
      - application/json
      description: |-
        Create a new EHR with the specified ehr_id identifier.
        The value of the ehr_id unique identifier MUST be valid HIER_OBJECT_ID value. It is strongly RECOMMENDED that an UUID always be used for this.
        An EHR_STATUS resource needs to be always created and committed in the new EHR. This resource MAY be also supplied by the client as the request body. If not supplied, a default EHR_STATUS will be used by the service with following attributes:
        - `is_queryable`: true
        - `is_modifiable`: true
        - `subject`: a PARTY_SELF object

        All other required EHR attributes and resources will be automatically created as needed by the [EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      - description: The new EHR resource is returned in the body when the request’s
          `Prefer` header value is `return=representation`, otherwise only headers
          are returned.
        in: header
        name: Prefer
        required: true
        type: string
      - description: 'An UUID as a user specified EHR identifier. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: Query Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.EhrCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            ETag:
              description: 'ehr_id of created document. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
              type: string
            Location:
              description: '{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398'
              type: string
            RequestID:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/model.EhrSummary'
        "400":
          description: Is returned when the request body (if provided)  could      not  be  parsed.
        "409":
          description: Unable to create a new EHR due to a conflict with an already
            existing EHR. Can happen when the supplied ehr_id is already used by an
            existing EHR.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Create EHR with id
      tags:
      - EHR
  /ehr/{ehr_id}/composition:
    get:
      consumes:
      - application/json
      description: |
        Retrieves all versions of all COMPOSITIONs associated with the EHR identified by `ehr_id`.
      parameters:
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.EhrDocumentItem'
            type: array
        "400":
          description: Is returned when AuthUserId or EhrSystemId is not specified
        "404":
          description: is returned when an EHR with `ehr_id` does not exist.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get all COMPOSITIONs
      tags:
      - COMPOSITION
    post:
      consumes:
      - application/json
      description: |
        Work in progress...
        Creates the first version of a new COMPOSITION in the EHR identified by ehr_id.
      parameters:
      - description: 'EHR identifier. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      - description: GroupAccessId - UUID. If not specified, the default access group
          will be used.
        in: header
        name: GroupAccessId
        type: string
      - description: The new EHR resource is returned in the body when the request’s
          `Prefer` header value is `return=representation`, otherwise only headers
          are returned.
        in: header
        name: Prefer
        required: true
        type: string
      - description: COMPOSITION
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.Composition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            ETag:
              description: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
              type: string
            Location:
              description: '{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/composition/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1'
              type: string
            RequestID:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/model.Composition'
        "400":
          description: Is returned when the request has invalid ehr_id or invalid
            content (e.g. content could not be converted to a valid COMPOSITION object)
        "404":
          description: Is returned when an EHR with ehr_id does not exist.
        "422":
          description: Is returned when the content could be converted to a COMPOSITION,
            but there are semantic validation errors, such as the underlying template
            is not known or is not validating the supplied COMPOSITION).
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Create COMPOSITION
      tags:
      - COMPOSITION
  /ehr/{ehr_id}/composition/{preceding_version_uid}:
    delete:
      consumes:
      - application/json
      description: |
        Deletes the COMPOSITION identified by `preceding_version_uid` and associated with the EHR identified by `ehr_id`.
      parameters:
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: 'Identifier of the COMPOSITION to be deleted. This MUST be the
          last (most recent)  version.  Example:  `8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1`'
        in: path
        name: preceding_version_uid
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: '`No Content` is returned when COMPOSITION was deleted.'
          headers:
            RequestID:
              description: Request identifier
              type: string
        "400":
          description: '`Bad Request` is returned when the composition with `preceding_version_uid`
            is already deleted.'
        "404":
          description: '`Not Found` is returned when an EHR with ehr_id does not exist
            or when a COMPOSITION with preceding_version_uid does not exist.'
        "409":
          description: '`Conflict` is returned when supplied `preceding_version_uid`
            doesn’t match the latest version. Returns latest version in the Location
            and ETag headers.'
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Deletes the COMPOSITION by version id
      tags:
      - COMPOSITION
  /ehr/{ehr_id}/composition/{version_uid}:
    get:
      consumes:
      - application/json
      description: |
        Retrieves a particular version of the COMPOSITION identified by `version_uid` and associated with the EHR identified by `ehr_id`.
      parameters:
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: 'VERSION identifier taken from VERSION.uid.value. Example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1'
        in: path
        name: version_uid
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Composition'
        "202":
          description: Is returned when the request is still being processed
        "204":
          description: Is returned when the COMPOSITION is deleted (logically).
        "400":
          description: Is returned when AuthUserId is not specified
        "404":
          description: is returned when an EHR with `ehr_id` does not exist or when
            an COMPOSITION with `version_uid` does not exist.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get COMPOSITION by version id
      tags:
      - COMPOSITION
  /ehr/{ehr_id}/composition/{versioned_object_uid}:
    put:
      consumes:
      - application/json
      description: |
        Updates COMPOSITION identified by `versioned_object_uid` and associated with the EHR
        identified by `ehr_id`. If the request body already contains a COMPOSITION.uid.value,
        it must match the `versioned_object_uid` in the URL. The existing latest `version_uid`
        of COMPOSITION resource (i.e the `preceding_version_uid`) must be specified in the `If-Match` header.
      parameters:
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: 'identifier of the COMPOSITION to be updated. Example: `8849182c-82ad-4088-a07f-48ead4180515`'
        in: path
        name: versioned_object_uid
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      - description: The updated COMPOSITION resource is returned to the body when
          the request’s `Prefer` header value is `return=representation`, otherwise
          only headers are returned.
        in: header
        name: Prefer
        required: true
        type: string
      - description: 'The existing latest version_uid of COMPOSITION resource (i.e
          the preceding_version_uid).  Example:  `8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1`'
        in: header
        name: If-Match
        required: true
        type: string
      - description: List of changes in COMPOSITION
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.Composition'
      produces:
      - application/json
      responses:
        "200":
          description: Is returned when the COMPOSITION is successfully updated and
            the updated resource is returned in the body when Prefer header value
            is `return=representation.`
          headers:
            ETag:
              description: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2
              type: string
            Location:
              description: '{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/composition/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
              type: string
            RequestID:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/model.Composition'
        "400":
          description: '`Bad Request` is returned when the request has invalid `ehr_id`
            or invalid content (e.g. either the body of the request could not be read,
            or converted to a valid COMPOSITION object)'
        "404":
          description: '`Not Found` is returned when an EHR with ehr_id does not exist
            or when a COMPOSITION with version_object_uid does not exist.'
        "412":
          description: '`Version conflict` is returned when `If-Match` request header
            doesn’t match the latest version (of this versioned object)  on  the  service  side.  Returns  also  latest  `version_uid`  in  the  `Location`  and  `ETag`  headers.'
        "422":
          description: '`Unprocessable Entity` is returned when the content could
            be converted to a COMPOSITION, but there are semantic validation errors,
            such as the underlying template is not known or is not validating the
            supplied COMPOSITION).'
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Updates the COMPOSITION by version id
      tags:
      - COMPOSITION
  /ehr/{ehr_id}/directory:
    delete:
      description: |-
        https://specifications.openehr.org/releases/ITS-REST/latest/ehr.html#tag/DIRECTORY/operation/directory_delete
        The existing latest {version_uid} of directory FOLDER resource (i.e. the {preceding_version_uid}) must be specified in the {If-Match} header.
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - default: '"return=minimal"'
        description: Request header to indicate the preference over response details.
          The response will contain the entire resource when the Prefer header has
          a value of return=representation.
        in: header
        name: Prefer
        required: true
        type: string
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: Patient UserId
        in: query
        name: patient_id
        required: true
        type: string
      responses:
        "204":
          description: Is returned when the resource identified by the request parameters
            has been (logically) deleted
        "400":
          description: Is returned when the request has invalid content
        "404":
          description: Is returned when an EHR with {ehr_id} does not exist, or DIRECTORY
            with that version is not exist
        "409":
          description: Is returned when a resource with same identifier(s) already
            exists, or previous request still in progress
        "412":
          description: Is returned when 'If-Match' request header doesn't match the
            latest version on the service side. Returns also latest 'version_uid'
            in the 'Location' and 'ETag' headers
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Delete DIRECTORY folder associated with the EHR identified by ehr_id.
      tags:
      - DIRECTORY
    get:
      description: |-
        https://specifications.openehr.org/releases/ITS-REST/latest/ehr.html#tag/DIRECTORY/operation/directory_get_at_time
        Retrieves the version of the directory FOLDER associated with the EHR identified by {ehr_id}. If {version_at_time} is supplied, retrieves the version extant at specified time, otherwise retrieves the latest directory FOLDER version. If path is supplied, retrieves from the directory only the sub-FOLDER that is associated with that path.
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - default: '"return=minimal"'
        description: Request header to indicate the preference over response details.
          The response will contain the entire resource when the Prefer header has
          a value of return=representation.
        in: header
        name: Prefer
        required: true
        type: string
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: 'Example: version_at_time=2015-01-20T19:30:22.765+01:00 A given
          time in the extended ISO 8601 format'
        in: query
        name: version_at_time
        required: true
        type: string
      - description: 'Example: path=episodes/a/b/c A path to a sub-folder; consists
          of slash-separated values of the name attribute of FOLDERs in the directory'
        in: query
        name: path
        required: true
        type: string
      - description: Patient UserId
        in: query
        name: patient_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Is returned when the FOLDER is successfully retrieved
          schema:
            $ref: '#/definitions/model.Directory'
        "204":
          description: Is returned when the resource identified by the request parameters
            (at specified {version_at_time}) time has been deleted
        "400":
          description: Is returned when the request has invalid content
        "404":
          description: Is returned when an EHR with {ehr_id} does not exist, or when
            a directory does not exist at the specified {version_at_time}, or when
            {path} does not exists within the directory
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get folder in DIRECTORY version at time.
      tags:
      - DIRECTORY
    post:
      consumes:
      - application/json
      description: https://specifications.openehr.org/releases/ITS-REST/latest/ehr.html#tag/DIRECTORY/operation/directory_create
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: Doctor UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - default: '"return=minimal"'
        description: Request header to indicate the preference over response details.
          The response will contain the entire resource when the Prefer header has
          a value of return=representation.
        in: header
        name: Prefer
        required: true
        type: string
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: Patient UserId
        in: query
        name: patient_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Is returned when the DIRECTORY was successfully created.
          schema:
            $ref: '#/definitions/model.Directory'
        "400":
          description: Is returned when the request has invalid content
        "404":
          description: Is returned when an EHR with {ehr_id}  does not exist
        "409":
          description: Is returned when a resource with same identifier(s) already
            exists, or previous request still in progress
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Create DIRECTORY
      tags:
      - DIRECTORY
    put:
      consumes:
      - application/json
      description: https://specifications.openehr.org/releases/ITS-REST/latest/ehr.html#tag/DIRECTORY/operation/directory_update
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - default: '"return=minimal"'
        description: Request header to indicate the preference over response details.
          The response will contain the entire resource when the Prefer header has
          a value of return=representation.
        in: header
        name: Prefer
        required: true
        type: string
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: Patient UserId
        in: query
        name: patient_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Is returned when the DIRECTORY was successfully updated
          schema:
            $ref: '#/definitions/model.Directory'
        "204":
          description: Is returned when directory was updated and 'Prefer' header
            is missing or is set to 'return=minimal'
        "400":
          description: Is returned when the request has invalid content
        "404":
          description: Is returned when an EHR with {ehr_id} does not exist, or DIRECTORY
            with that version is not exist
        "409":
          description: Is returned when a resource with same identifier(s) already
            exists, or previous request still in progress
        "412":
          description: Is returned when 'If-Match' request header doesn't match the
            latest version on the service side. Returns also latest 'version_uid'
            in the 'Location' and 'ETag' headers
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Update DIRECTORY
      tags:
      - DIRECTORY
  /ehr/{ehr_id}/directory/{version_uid}:
    get:
      description: |-
        https://specifications.openehr.org/releases/ITS-REST/latest/ehr.html#tag/DIRECTORY/operation/directory_get_at_time
        Retrieves a particular version of the directory FOLDER identified by {version_uid} and associated with the EHR identified by {ehr_id}. If {path} is supplied, retrieves from the directory only the sub-FOLDER that is associated with that path.
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - default: '"return=minimal"'
        description: Request header to indicate the preference over response details.
          The response will contain the entire resource when the Prefer header has
          a value of return=representation.
        in: header
        name: Prefer
        required: true
        type: string
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: 'Example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
          VERSION identifier taken from VERSION.uid.value'
        in: query
        name: version_uid
        required: true
        type: string
      - description: 'Example: path=episodes/a/b/c A path to a sub-folder; consists
          of slash-separated values of the name attribute of FOLDERs in the directory'
        in: query
        name: path
        required: true
        type: string
      - description: Patient UserId
        in: query
        name: patient_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Is returned when the FOLDER is successfully retrieved
          schema:
            $ref: '#/definitions/model.Directory'
        "204":
          description: Is returned when the resource identified by the request parameters
            (at specified {version_at_time}) time has been deleted
        "400":
          description: Is returned when the request has invalid content
        "404":
          description: Is returned when an EHR with {ehr_id} does not exist, or when
            a directory does not exist at the specified {version_at_time}, or when
            {path} does not exists within the directory
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get folder in DIRECTORY by version.
      tags:
      - DIRECTORY
  /ehr/{ehr_id}/ehr_status:
    get:
      consumes:
      - application/json
      description: Retrieves a version of the EHR_STATUS associated with the EHR identified
        by `ehr_id`. If `version_at_time` is supplied, retrieves the version extant
        at specified time, otherwise retrieves the latest EHR_STATUS version.
      parameters:
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: 'A given time in the extended ISO 8601 format. Example: 2015-01-20T19:30:22.765+01:00'
        in: query
        name: version_at_time
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EhrStatusUpdate'
        "202":
          description: Is returned when the request is still being processed
        "400":
          description: Is returned when the request has invalid content such as an
            invalid `version_at_time` format.
        "404":
          description: Is returned when EHR with `ehr_id` does not exist or a version
            of an EHR_STATUS resource does not exist at the specified `version_at_time`
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get EHR_STATUS version by time
      tags:
      - EHR_STATUS
    put:
      consumes:
      - application/json
      description: Updates EHR_STATUS associated with the EHR identified by `ehr_id`.
      parameters:
      - description: 'EHR identifier. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      - description: The existing latest `version_uid` of EHR_STATUS resource (i.e.
          the `preceding_version_uid`)  must  be  specified.
        in: header
        name: If-Match
        required: true
        type: string
      - description: Updated resource is returned in the body when the request’s `Prefer`
          header value is `return=representation`, otherwise only headers are returned.
        in: header
        name: Prefer
        required: true
        type: string
      - description: EHR_STATUS
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.EhrStatusUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            ETag:
              description: 'uid of created document. Example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
              type: string
            Location:
              description: '{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/ehr_status/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
              type: string
            RequestID:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/model.EhrStatusUpdate'
        "204":
          description: Is returned when `Prefer` header is missing or is set to `return=minimal`
          headers:
            ETag:
              description: 'uid of created document. Example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
              type: string
            Location:
              description: '{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/ehr_status/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
              type: string
        "400":
          description: Is returned when the request has invalid content.
        "404":
          description: Is returned when an EHR with ehr_id does not exist.
        "412":
          description: Is returned when `If-Match` request header doesn’t match the
            latest version on the service side. Returns also latest `version_uid`
            in the `Location` and `ETag` headers.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Update EHR_STATUS
      tags:
      - EHR_STATUS
  /ehr/{ehr_id}/ehr_status/{version_uid}:
    get:
      consumes:
      - application/json
      description: Retrieves a particular version of the EHR_STATUS identified by
        `version_uid` and associated with the EHR identified by `ehr_id`.
      parameters:
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: 'VERSION identifier taken from VERSION.uid.value. Example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
        in: path
        name: version_uid
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EhrStatusUpdate'
        "202":
          description: Is returned when the request is still being processed
        "400":
          description: Is returned when AuthUserId is not specified
        "404":
          description: is returned when an EHR with `ehr_id` does not exist or when
            an EHR_STATUS with `version_uid` does not exist.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get EHR_STATUS by version id
      tags:
      - EHR_STATUS
  /query/{qualified_query_name}:
    get:
      consumes:
      - application/json
      description: |-
        Execute a stored query, identified by the supplied qualified_query_name (at latest version), fetching fetch numbers of rows from offset and passing query_parameters to the underlying query engine.
        See also details on usage of [query parameters](https://specifications.openehr.org/releases/ITS-REST/latest/query.html#tag/Request/Common-Headers-and-Query-Parameters).
        Queries can be stored or, once stored, their definition can be retrieved using the [definition endpoint](https://specifications.openehr.org/releases/ITS-REST/latest/definition.html#tag/Query).
        https://specifications.openehr.org/releases/ITS-REST/latest/query.html#tag/Query/operation/query_execute_stored_query
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: 'If pattern should given be in the format of [{namespace}::]{query-name},  and  when  is       empty,  it       will     be  treated  as    '
        in: path
        name: qualified_query_name
        required: true
        type: string
      - description: An optional parameter to execute the query within an EHR context.
        in: query
        name: ehr_id
        type: string
      - description: The row number in result-set to start result-set from (0-based),
          default is 0.
        in: query
        name: offset
        type: string
      - description: Number of rows to fetch (the default depends on the implementation).
        in: query
        name: fetch
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            ETag:
              description: 'A unique identifier of the resultSet. Example: cdbb5db1-e466-4429-a9e5-bf80a54e120b'
              type: string
          schema:
            $ref: '#/definitions/model.QueryResponse'
        "400":
          description: Is returned when the server was unable to execute the query
            due to invalid input, e.g. a required parameter is missing, or at least
            one of the parameters has invalid syntax
        "404":
          description: Is returned when a stored query with qualified_query_name does
            not exists.
        "408":
          description: Is returned when there is a query execution timeout
      summary: Execute stored AQL
      tags:
      - QUERY
    post:
      consumes:
      - application/json
      description: |-
        Execute a stored query, identified by the supplied {qualified_query_name} (at latest version).
        See also details on usage of [query parameters](https://specifications.openehr.org/releases/ITS-REST/latest/query.html#tag/Request/Common-Headers-and-Query-Parameters).
        Queries can be stored or, once stored, their definition can be retrieved using the [definition endpoint](https://specifications.openehr.org/releases/ITS-REST/latest/definition.html#tag/Query).
        https://specifications.openehr.org/releases/ITS-REST/latest/query.html#tag/Query/operation/query_execute_stored_query
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: 'If pattern should given be in the format of [{namespace}::]{query-name},  and  when  is       empty,  it       will     be  treated  as    '
        in: path
        name: qualified_query_name
        required: true
        type: string
      - description: Query Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.QueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            ETag:
              description: 'A unique identifier of the resultSet. Example: cdbb5db1-e466-4429-a9e5-bf80a54e120b'
              type: string
          schema:
            $ref: '#/definitions/model.QueryResponse'
        "400":
          description: Is returned when the server was unable to execute the query
            due to invalid input, e.g. a required parameter is missing, or at least
            one of the parameters has invalid syntax
        "404":
          description: Is returned when a stored query with qualified_query_name does
            not exists.
        "408":
          description: Is returned when there is a query execution timeout
      summary: Execute stored AQL (POST)
      tags:
      - QUERY
  /query/aql:
    get:
      consumes:
      - application/json
      description: |
        Execute a given ad-hoc AQL query, supplied by {q} parameter, fetching {fetch} numbers of rows from {offset} and passing {query_parameters} to the underlying query engine.
        See also details on usage of [query parameters](https://specifications.openehr.org/releases/ITS-REST/Release-1.0.2/query.html#requirements-common-headers-and-query-parameters).
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: Query Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.QueryRequest'
      - description: An optional parameter to execute the query within an EHR context.
        in: query
        name: ehr_id
        type: string
      - description: 'AQL. Example: {q=SELECT e/ehr_id/value, c/context/start_time/value
          as startTime, obs/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/magnitude
          AS systolic, c/uid/value AS cid, c/name FROM EHR e CONTAINS COMPOSITION
          c[openEHR-EHR-COMPOSITION.encounter.v1] CONTAINS OBSERVATION obs[openEHR-EHR-OBSERVATION.blood_pressure.v1]
          WHERE obs/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/magnitude
          >= $systolic_bp} The AQL query to be executed.'
        in: query
        name: q
        type: string
      - description: The row number in result-set to start result-set from (0-based),
          default is 0.
        in: query
        name: offset
        type: string
      - description: Number of rows to fetch (the default depends on the implementation).
        in: query
        name: fetch
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.QueryResponse'
        "400":
          description: Is returned when the server was unable to execute the query
            due to invalid input, e.g. a request with missing `q` parameter or an
            invalid query syntax.
        "408":
          description: Is returned when there is a query execution timeout (i.e. maximum
            query execution time reached, therefore the server aborted the execution
            of the query).
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Execute ad-hoc AQL query
      tags:
      - QUERY
    post:
      consumes:
      - application/json
      description: |
        Execute ad-hoc query, supplied by q attribute, fetching {fetch} numbers of rows from {offset} and passing {query_parameters} to the underlying query engine.
        See also details on usage of [query parameters](https://specifications.openehr.org/releases/ITS-REST/Release-1.0.2/query.html#requirements-common-headers-and-query-parameters).
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: Query Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.QueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.QueryResponse'
        "400":
          description: Is returned when the server was unable to execute the query
            due to invalid input, e.g. a request with missing `q` parameter or an
            invalid query syntax.
        "408":
          description: Is returned when there is a query execution timeout (i.e. maximum
            query execution time reached, therefore the server aborted the execution
            of the query).
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Execute ad-hoc (non-stored) AQL query
      tags:
      - QUERY
  /requests/:
    get:
      consumes:
      - application/json
      description: |
        It is returning only transactions which in progress
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: 'default: 10'
        in: query
        name: limit
        required: true
        type: string
      - description: 'id namespace. Example: examples'
        in: query
        name: offset
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/processing.RequestsResult'
        "400":
          description: Is returned when userID is empty
        "404":
          description: Is returned when requests not exist
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get list of transactions requests by authorized user
      tags:
      - REQUEST
  /requests/{request_id}:
    get:
      consumes:
      - application/json
      description: |
        It's returning only transactions which in progress
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: Unique id of request
        in: path
        name: request_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/processing.RequestResult'
        "400":
          description: Is returned when userID or request_id is empty
        "404":
          description: Is returned when requests not exist
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get list of transactions by certain request id for authorized user
      tags:
      - REQUEST
  /user/{user_id}:
    get:
      consumes:
      - application/json
      description: Get information about the user by user_id
      parameters:
      - description: The identifier of the requested user info
        in: path
        name: user_id
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserInfo'
        "400":
          description: '`user_id` is incorrect or requested user is not a doctor'
        "404":
          description: User with ID not exist
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get user info
      tags:
      - USER
  /user/code/{code}:
    get:
      consumes:
      - application/json
      description: Get information about the doctor by code
      parameters:
      - description: The pin code of the requested doctor
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserInfo'
        "400":
          description: '`code` is incorrect or requested user is not a doctor'
        "404":
          description: User code is not exist
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get doctor info by code
      tags:
      - USER
  /user/group:
    get:
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserGroup'
            type: array
        "400":
          description: The request could not be understood by the server due to incorrect
            syntax.
        "404":
          description: Is returned when groupID does not exist
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get a list of user groups
      tags:
      - USER_GROUP
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: User group
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UserGroup'
      responses:
        "201":
          description: Indicates that the request has succeeded and transaction about
            create new user group has been created
          headers:
            RequestID:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/model.UserGroup'
        "400":
          description: The request could not be understood by the server due to incorrect
            syntax. The client SHOULD NOT repeat the request without modifications.
        "404":
          description: User with ID not exist
        "409":
          description: Group with that Name already exist
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: User group create
      tags:
      - USER_GROUP
  /user/group/{group_id}:
    get:
      parameters:
      - description: 'User group identifier. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: group_id
        required: true
        type: string
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserGroup'
        "400":
          description: The request could not be understood by the server due to incorrect
            syntax.
        "403":
          description: Is returned when userID does not have access to requested group
        "404":
          description: Is returned when groupID does not exist
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get user group by ID
      tags:
      - USER_GROUP
  /user/group/{group_id}/user_add/{user_id}/{access_level}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      - description: The identifier of the user group
        in: path
        name: group_id
        required: true
        type: string
      - description: The identifier of the user to be added
        in: path
        name: user_id
        required: true
        type: string
      - description: Access Level. One of `admin` or `read`
        in: path
        name: access_level
        required: true
        type: string
      responses:
        "200":
          description: ""
          headers:
            RequestID:
              description: Request identifier
              type: string
        "400":
          description: The request could not be understood by the server due to incorrect
            syntax.
        "403":
          description: Authentication required or user does not have access to change
            the group
        "404":
          description: Group or adding user is not exist
        "409":
          description: The user is already a member of a group
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Adding a user to a group
      tags:
      - USER_GROUP
  /user/group/{group_id}/user_remove/{user_id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      - description: The identifier of the user group
        in: path
        name: group_id
        required: true
        type: string
      - description: The identifier of the user to be removed
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: ""
          headers:
            RequestID:
              description: Request identifier
              type: string
        "400":
          description: The request could not be understood by the server due to incorrect
            syntax.
        "403":
          description: Authentication required or user does not have access to change
            the group
        "404":
          description: Group or adding user is not exist or `user_id` is not the member
            of the group
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Removing a user from a group
      tags:
      - USER_GROUP
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      - description: User authentication request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UserAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.JWT'
        "400":
          description: Password, EhrSystemId or userID incorrect
        "401":
          description: Password or userID incorrect
        "404":
          description: User with ID not exist
        "422":
          description: The request could not be understood by the server due to incorrect
            syntax. The client SHOULD NOT repeat the request without modifications.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Login user
      tags:
      - USER
  /user/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer AccessToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: JWT
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.JWT'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged out
        "401":
          description: User unauthorized
        "422":
          description: The request could not be understood by the server due to incorrect
            syntax. The client SHOULD NOT repeat the request without modifications.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Logout
      tags:
      - USER
  /user/refresh/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer RefreshToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserId
        in: header
        name: AuthUserId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.JWT'
        "401":
          description: User unauthorized
        "404":
          description: User with ID not exist
        "422":
          description: The request could not be understood by the server due to incorrect
            syntax. The client SHOULD NOT repeat the request without modifications.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Refresh JWT
      tags:
      - USER
  /user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: The identifier of the system, typically a reverse domain identifier
        in: header
        name: EhrSystemId
        type: string
      - description: 'User creation request. `role`: 0 - Patient, 1 - Doctor. Fields
          `Name`, `Address`, `Description`, `PictureURL` are required for Doctor role'
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Indicates that the request has succeeded and transaction about
            register new user has been created
          headers:
            RequestID:
              description: Request identifier
              type: string
        "400":
          description: The request could not be understood by the server due to incorrect
            syntax. The client SHOULD NOT repeat the request without modifications.
        "409":
          description: User with that userID already exist
        "422":
          description: Password, systemID or role incorrect
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Register user
      tags:
      - USER
swagger: "2.0"
