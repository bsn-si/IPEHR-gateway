// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Retrieve the IPEHR statistics total and current month",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stat"
                ],
                "summary": "Get IPEHR statistics total",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stat.ResponseTotal"
                        }
                    },
                    "500": {
                        "description": "Is returned when an unexpected error occurs while processing a request"
                    }
                }
            }
        },
        "/query/": {
            "post": {
                "description": "Performs processing of incoming AQL requests.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QUERY"
                ],
                "summary": "Query",
                "parameters": [
                    {
                        "description": "Query request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.QueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has succeeded and transaction about register new user has been created",
                        "schema": {
                            "$ref": "#/definitions/model.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "The request could not be understood by the server due to incorrect syntax."
                    },
                    "408": {
                        "description": "The request was canceled due to exceeding the waiting limit."
                    },
                    "500": {
                        "description": "Is returned when an unexpected error occurs while processing a request"
                    }
                }
            }
        },
        "/{period}": {
            "get": {
                "description": "Retrieve the IPEHR statistics per month",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stat"
                ],
                "summary": "Get IPEHR statistics per month",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Month in YYYYYMM format. Example: 202201",
                        "name": "period",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stat.ResponsePeriod"
                        }
                    },
                    "500": {
                        "description": "Is returned when an unexpected error occurs while processing a request"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.QueryColumn": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "model.QueryRequest": {
            "type": "object",
            "properties": {
                "ehr_id": {
                    "type": "string"
                },
                "fetch": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "q": {
                    "type": "string"
                },
                "query_parameters": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "model.QueryResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QueryColumn"
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "_created": {
                            "type": "string"
                        },
                        "_executed_aql": {
                            "type": "string"
                        },
                        "_generator": {
                            "type": "string"
                        },
                        "_href": {
                            "type": "string"
                        },
                        "_schema_version": {
                            "type": "string"
                        },
                        "_type": {
                            "type": "string"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "q": {
                    "type": "string"
                },
                "rows": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "stat.ResponsePeriod": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/stat.Stat"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "stat.ResponseTotal": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/stat.Stat"
                },
                "month": {
                    "$ref": "#/definitions/stat.Stat"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "stat.Stat": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "integer"
                },
                "patients": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
