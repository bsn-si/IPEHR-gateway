basePath: /v1
definitions:
  model.EhrStatusUpdate:
    properties:
      _type:
        type: string
      archetype_node_id:
        type: string
      is_modifiable:
        type: boolean
      is_queryable:
        type: boolean
      name:
        properties:
          value:
            type: string
        type: object
      other_details:
        properties:
          _type:
            type: string
          archetype_node_id:
            type: string
          items:
            items: {}
            type: array
          name:
            properties:
              value:
                type: string
            type: object
        type: object
      subject:
        properties:
          external_ref:
            $ref: '#/definitions/model.ExternalRef'
        type: object
      uid:
        properties:
          _type:
            type: string
          value:
            type: string
        type: object
    type: object
  model.EhrSummary:
    properties:
      ehr_access:
        properties:
          id:
            type: string
          namespace:
            type: string
          type:
            type: string
        type: object
      ehr_id:
        type: string
      ehr_status:
        properties:
          id:
            type: string
          namespace:
            type: string
          type:
            type: string
        type: object
      system_id:
        type: string
      time_created:
        properties:
          value:
            type: string
        type: object
    type: object
  model.ExternalRef:
    properties:
      id:
        type: string
      namespace:
        type: string
      scheme:
        type: string
      type:
        type: string
    type: object
host: https://gateway.ipehr.stage.bsn.si
info:
  contact:
    email: support@bsn.si
    name: API Support
    url: https://bsn.si/blockchain
  description: The IPEHR Gateway is an openEHR compliant EHR server implementation
    that stores encrypted medical data in a Filecoin distributed file storage.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: IPEHR Gateway API
  version: "0.1"
paths:
  /ehr:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve the EHR with the specified subject_id and subject_namespace.
        These subject parameters will be matched against EHR’s
        EHR_STATUS.subject.external_ref.id.value and EHR_STATUS.subject.external_ref.namespace values.
      parameters:
      - description: 'subject id. Example: ins01'
        in: query
        name: subject_id
        required: true
        type: string
      - description: 'id namespace. Example: examples'
        in: query
        name: subject_namespace
        required: true
        type: string
      - description: UserId UUID
        in: header
        name: AuthUserId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EhrSummary'
        "400":
          description: Is returned when userId is empty
        "404":
          description: Is returned when an EHR with ehr_id does not exist.
      summary: Get EHR summary by subject id
      tags:
      - EHR
    post:
      consumes:
      - application/json
      description: |-
        Create a new EHR with an auto-generated identifier.
        An EHR_STATUS resource needs to be always created and committed in the new EHR. This resource MAY be also supplied by the client as the request body. If not supplied, a default EHR_STATUS will be used by the service with following attributes:
        - `is_queryable`: true
        - `is_modifiable`: true
        - `subject`: a PARTY_SELF object

        All other required EHR attributes and resources will be automatically created as needed by the [EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).
      parameters:
      - description: UserId UUID
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: The new EHR resource is returned in the body when the request’s
          `Prefer` header value is `return=representation`, otherwise only headers
          are returned.
        in: header
        name: Prefer
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            ETag:
              description: 'ehr_id of created document. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
              type: string
            Location:
              description: '{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398'
              type: string
          schema:
            $ref: '#/definitions/model.EhrSummary'
        "400":
          description: Is returned when the request body (if provided) could not be
            parsed.
        "409":
          description: Unable to create a new EHR due to a conflict with an already
            existing EHR with the same subject id, namespace pair.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Create EHR
      tags:
      - EHR
  /ehr/{ehr_id}:
    get:
      consumes:
      - application/json
      description: Retrieve the EHR with the specified ehr_id
      parameters:
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: UserId UUID
        in: header
        name: AuthUserId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EhrSummary'
        "400":
          description: Is returned when userId is empty
        "404":
          description: Is returned when an EHR with ehr_id does not exist.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get EHR summary by id
      tags:
      - EHR
    put:
      consumes:
      - application/json
      description: |-
        Create a new EHR with the specified ehr_id identifier.
        The value of the ehr_id unique identifier MUST be valid HIER_OBJECT_ID value. It is strongly RECOMMENDED that an UUID always be used for this.
        An EHR_STATUS resource needs to be always created and committed in the new EHR. This resource MAY be also supplied by the client as the request body. If not supplied, a default EHR_STATUS will be used by the service with following attributes:
        - `is_queryable`: true
        - `is_modifiable`: true
        - `subject`: a PARTY_SELF object

        All other required EHR attributes and resources will be automatically created as needed by the [EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).
      parameters:
      - description: UserId UUID
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: 'An UUID as a user specified EHR identifier. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            ETag:
              description: 'ehr_id of created document. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
              type: string
            Location:
              description: '{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398'
              type: string
          schema:
            $ref: '#/definitions/model.EhrSummary'
        "400":
          description: Is returned when the request body (if provided) could not be
            parsed.
        "409":
          description: Unable to create a new EHR due to a conflict with an already
            existing EHR. Can happen when the supplied ehr_id is already used by an
            existing EHR.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Create EHR with id
      tags:
      - EHR
  /ehr/{ehr_id}/ehr_status:
    get:
      consumes:
      - application/json
      description: Retrieves a version of the EHR_STATUS associated with the EHR identified
        by `ehr_id`. If `version_at_time` is supplied, retrieves the version extant
        at specified time, otherwise retrieves the latest EHR_STATUS version.
      parameters:
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: 'A given time in the extended ISO 8601 format. Example: 2015-01-20T19:30:22.765+01:00'
        in: query
        name: version_at_time
        required: true
        type: string
      - description: UserId UUID
        in: header
        name: AuthUserId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EhrStatusUpdate'
        "400":
          description: Is returned when the request has invalid content such as an
            invalid `version_at_time` format.
        "404":
          description: Is returned when EHR with `ehr_id` does not exist or a version
            of an EHR_STATUS resource does not exist at the specified `version_at_time`
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get EHR_STATUS version by time
      tags:
      - EHR_STATUS
    put:
      consumes:
      - application/json
      description: Updates EHR_STATUS associated with the EHR identified by `ehr_id`.
        The existing latest `version_uid` of EHR_STATUS resource (i.e. the `preceding_version_uid`)
        must be specified in the `If-Match` header. The response will contain the
        updated EHR_STATUS resource when the `Prefer` header has a value of `return=representation`
      parameters:
      - description: 'EHR identifier. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: UserId UUID
        in: header
        name: AuthUserId
        required: true
        type: string
      - description: Updated resource is returned in the body when the request’s `Prefer`
          header value is `return=representation`, otherwise only headers are returned.
        in: header
        name: Prefer
        required: true
        type: string
      - description: EHR_STATUS
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.EhrStatusUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            ETag:
              description: 'uid of created document. Example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
              type: string
            Location:
              description: '{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/ehr_status/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
              type: string
          schema:
            $ref: '#/definitions/model.EhrStatusUpdate'
        "204":
          description: Is returned when `Prefer` header is missing or is set to `return=minimal`
          headers:
            ETag:
              description: 'uid of created document. Example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
              type: string
            Location:
              description: '{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/ehr_status/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
              type: string
        "400":
          description: Is returned when the request has invalid content.
        "404":
          description: Is returned when an EHR with ehr_id does not exist.
        "412":
          description: Is returned when `If-Match` request header doesn’t match the
            latest version on the service side. Returns also latest `version_uid`
            in the `Location` and `ETag` headers.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Update EHR_STATUS
      tags:
      - EHR_STATUS
  /ehr/{ehr_id}/ehr_status/{version_uid}:
    get:
      consumes:
      - application/json
      description: Retrieves a particular version of the EHR_STATUS identified by
        `version_uid` and associated with the EHR identified by `ehr_id`.
      parameters:
      - description: 'EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398'
        in: path
        name: ehr_id
        required: true
        type: string
      - description: 'VERSION identifier taken from VERSION.uid.value. Example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2'
        in: path
        name: version_uid
        required: true
        type: string
      - description: UserId UUID
        in: header
        name: AuthUserId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EhrStatusUpdate'
        "400":
          description: Is returned when AuthUserId is not specified
        "404":
          description: is returned when an EHR with `ehr_id` does not exist or when
            an EHR_STATUS with `version_uid` does not exist.
        "500":
          description: Is returned when an unexpected error occurs while processing
            a request
      summary: Get EHR_STATUS by version id
      tags:
      - EHR_STATUS
swagger: "2.0"
