{
    "swagger": "2.0",
    "info": {
        "description": "The IPEHR Gateway is an openEHR compliant EHR server implementation that stores encrypted medical data in a Filecoin distributed file storage.",
        "title": "IPEHR Gateway API",
        "contact": {
            "name": "API Support",
            "url": "https://bsn.si/blockchain",
            "email": "support@bsn.si"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "host": "gateway.ipehr.org",
    "basePath": "/v1",
    "paths": {
        "/ehr": {
            "get": {
                "description": "Retrieve the EHR with the specified subject_id and subject_namespace.\nThese subject parameters will be matched against EHR’s\nEHR_STATUS.subject.external_ref.id.value and EHR_STATUS.subject.external_ref.namespace values.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EHR"
                ],
                "summary": "Get EHR summary by subject id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "subject id. Example: ins01",
                        "name": "subject_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id namespace. Example: examples",
                        "name": "subject_namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UserId UUID",
                        "name": "AuthUserId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EhrSummary"
                        }
                    },
                    "400": {
                        "description": "Is returned when userId is empty"
                    },
                    "404": {
                        "description": "Is returned when an EHR with ehr_id does not exist."
                    }
                }
            },
            "post": {
                "description": "Create a new EHR with an auto-generated identifier.\nAn EHR_STATUS resource needs to be always created and committed in the new EHR. This resource MAY be also supplied by the client as the request body. If not supplied, a default EHR_STATUS will be used by the service with following attributes:\n- `is_queryable`: true\n- `is_modifiable`: true\n- `subject`: a PARTY_SELF object\n\nAll other required EHR attributes and resources will be automatically created as needed by the [EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EHR"
                ],
                "summary": "Create EHR",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserId UUID",
                        "name": "AuthUserId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The new EHR resource is returned in the body when the request’s `Prefer` header value is `return=representation`, otherwise only headers are returned.",
                        "name": "Prefer",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.EhrSummary"
                        },
                        "headers": {
                            "ETag": {
                                "type": "string",
                                "description": "ehr_id of created document. Example: 7d44b88c-4199-4bad-97dc-d78268e01398"
                            },
                            "Location": {
                                "type": "string",
                                "description": "{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398"
                            }
                        }
                    },
                    "400": {
                        "description": "Is returned when the request body (if provided) could not be parsed."
                    },
                    "409": {
                        "description": "Unable to create a new EHR due to a conflict with an already existing EHR with the same subject id, namespace pair."
                    },
                    "500": {
                        "description": "Is returned when an unexpected error occurs while processing a request"
                    }
                }
            }
        },
        "/ehr/{ehr_id}": {
            "get": {
                "description": "Retrieve the EHR with the specified ehr_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EHR"
                ],
                "summary": "Get EHR summary by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398",
                        "name": "ehr_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UserId UUID",
                        "name": "AuthUserId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EhrSummary"
                        }
                    },
                    "400": {
                        "description": "Is returned when userId is empty"
                    },
                    "404": {
                        "description": "Is returned when an EHR with ehr_id does not exist."
                    },
                    "500": {
                        "description": "Is returned when an unexpected error occurs while processing a request"
                    }
                }
            },
            "put": {
                "description": "Create a new EHR with the specified ehr_id identifier.\nThe value of the ehr_id unique identifier MUST be valid HIER_OBJECT_ID value. It is strongly RECOMMENDED that an UUID always be used for this.\nAn EHR_STATUS resource needs to be always created and committed in the new EHR. This resource MAY be also supplied by the client as the request body. If not supplied, a default EHR_STATUS will be used by the service with following attributes:\n- `is_queryable`: true\n- `is_modifiable`: true\n- `subject`: a PARTY_SELF object\n\nAll other required EHR attributes and resources will be automatically created as needed by the [EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EHR"
                ],
                "summary": "Create EHR with id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserId UUID",
                        "name": "AuthUserId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "An UUID as a user specified EHR identifier. Example: 7d44b88c-4199-4bad-97dc-d78268e01398",
                        "name": "ehr_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.EhrSummary"
                        },
                        "headers": {
                            "ETag": {
                                "type": "string",
                                "description": "ehr_id of created document. Example: 7d44b88c-4199-4bad-97dc-d78268e01398"
                            },
                            "Location": {
                                "type": "string",
                                "description": "{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398"
                            }
                        }
                    },
                    "400": {
                        "description": "Is returned when the request body (if provided) could not be parsed."
                    },
                    "409": {
                        "description": "Unable to create a new EHR due to a conflict with an already existing EHR. Can happen when the supplied ehr_id is already used by an existing EHR."
                    },
                    "500": {
                        "description": "Is returned when an unexpected error occurs while processing a request"
                    }
                }
            }
        },
        "/ehr/{ehr_id}/composition": {
            "post": {
                "description": "Creates the first version of a new COMPOSITION in the EHR identified by ehr_id.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COMPOSITION"
                ],
                "summary": "Create COMPOSITION",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EHR identifier. Example: 7d44b88c-4199-4bad-97dc-d78268e01398",
                        "name": "ehr_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UserId UUID",
                        "name": "AuthUserId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The new EHR resource is returned in the body when the request’s `Prefer` header value is `return=representation`, otherwise only headers are returned.",
                        "name": "Prefer",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Composition"
                        },
                        "headers": {
                            "ETag": {
                                "type": "string",
                                "description": "8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"
                            },
                            "Location": {
                                "type": "string",
                                "description": "{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/composition/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"
                            }
                        }
                    },
                    "400": {
                        "description": "Is returned when the request has invalid ehr_id or invalid content (e.g. content could not be converted to a valid COMPOSITION object)"
                    },
                    "404": {
                        "description": "Is returned when an EHR with ehr_id does not exist."
                    },
                    "422": {
                        "description": "Is returned when the content could be converted to a COMPOSITION, but there are semantic validation errors, such as the underlying template is not known or is not validating the supplied COMPOSITION)."
                    },
                    "500": {
                        "description": "Is returned when an unexpected error occurs while processing a request"
                    }
                }
            }
        },
        "/ehr/{ehr_id}/ehr_status": {
            "get": {
                "description": "Retrieves a version of the EHR_STATUS associated with the EHR identified by `ehr_id`. If `version_at_time` is supplied, retrieves the version extant at specified time, otherwise retrieves the latest EHR_STATUS version.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EHR_STATUS"
                ],
                "summary": "Get EHR_STATUS version by time",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398",
                        "name": "ehr_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "A given time in the extended ISO 8601 format. Example: 2015-01-20T19:30:22.765+01:00",
                        "name": "version_at_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UserId UUID",
                        "name": "AuthUserId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EhrStatusUpdate"
                        }
                    },
                    "400": {
                        "description": "Is returned when the request has invalid content such as an invalid `version_at_time` format."
                    },
                    "404": {
                        "description": "Is returned when EHR with `ehr_id` does not exist or a version of an EHR_STATUS resource does not exist at the specified `version_at_time`"
                    },
                    "500": {
                        "description": "Is returned when an unexpected error occurs while processing a request"
                    }
                }
            },
            "put": {
                "description": "Updates EHR_STATUS associated with the EHR identified by `ehr_id`. The existing latest `version_uid` of EHR_STATUS resource (i.e. the `preceding_version_uid`) must be specified in the `If-Match` header. The response will contain the updated EHR_STATUS resource when the `Prefer` header has a value of `return=representation`",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EHR_STATUS"
                ],
                "summary": "Update EHR_STATUS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EHR identifier. Example: 7d44b88c-4199-4bad-97dc-d78268e01398",
                        "name": "ehr_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UserId UUID",
                        "name": "AuthUserId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Updated resource is returned in the body when the request’s `Prefer` header value is `return=representation`, otherwise only headers are returned.",
                        "name": "Prefer",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "EHR_STATUS",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.EhrStatusUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EhrStatusUpdate"
                        },
                        "headers": {
                            "ETag": {
                                "type": "string",
                                "description": "uid of created document. Example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2"
                            },
                            "Location": {
                                "type": "string",
                                "description": "{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/ehr_status/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2"
                            }
                        }
                    },
                    "204": {
                        "description": "Is returned when `Prefer` header is missing or is set to `return=minimal`",
                        "headers": {
                            "ETag": {
                                "type": "string",
                                "description": "uid of created document. Example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2"
                            },
                            "Location": {
                                "type": "string",
                                "description": "{baseUrl}/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/ehr_status/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2"
                            }
                        }
                    },
                    "400": {
                        "description": "Is returned when the request has invalid content."
                    },
                    "404": {
                        "description": "Is returned when an EHR with ehr_id does not exist."
                    },
                    "412": {
                        "description": "Is returned when `If-Match` request header doesn’t match the latest version on the service side. Returns also latest `version_uid` in the `Location` and `ETag` headers."
                    },
                    "500": {
                        "description": "Is returned when an unexpected error occurs while processing a request"
                    }
                }
            }
        },
        "/ehr/{ehr_id}/ehr_status/{version_uid}": {
            "get": {
                "description": "Retrieves a particular version of the EHR_STATUS identified by `version_uid` and associated with the EHR identified by `ehr_id`.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EHR_STATUS"
                ],
                "summary": "Get EHR_STATUS by version id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EHR identifier taken from EHR.ehr_id.value. Example: 7d44b88c-4199-4bad-97dc-d78268e01398",
                        "name": "ehr_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VERSION identifier taken from VERSION.uid.value. Example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2",
                        "name": "version_uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UserId UUID",
                        "name": "AuthUserId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EhrStatusUpdate"
                        }
                    },
                    "400": {
                        "description": "Is returned when AuthUserId is not specified"
                    },
                    "404": {
                        "description": "is returned when an EHR with `ehr_id` does not exist or when an EHR_STATUS with `version_uid` does not exist."
                    },
                    "500": {
                        "description": "Is returned when an unexpected error occurs while processing a request"
                    }
                }
            }
        }
    },
    "definitions": {
        "base.Archetyped": {
            "type": "object",
            "properties": {
                "_type": {
                    "type": "string"
                },
                "archetype_id": {
                    "type": "string"
                },
                "rm_version": {
                    "type": "string"
                },
                "template_id": {
                    "type": "string"
                }
            }
        },
        "base.CodePhrase": {
            "type": "object",
            "properties": {
                "code_string": {
                    "type": "string"
                },
                "preferred_term": {
                    "type": "string"
                },
                "terminology_id": {
                    "type": "string"
                }
            }
        },
        "base.DvCodedText": {
            "type": "object",
            "properties": {
                "_type": {
                    "type": "string"
                },
                "defining_code": {
                    "$ref": "#/definitions/base.CodePhrase"
                },
                "encoding": {
                    "$ref": "#/definitions/base.CodePhrase"
                },
                "formatting": {
                    "type": "string"
                },
                "hyperlink": {
                    "$ref": "#/definitions/base.DvUri"
                },
                "language": {
                    "$ref": "#/definitions/base.CodePhrase"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/base.TermMapping"
                    }
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "base.DvDateTime": {
            "type": "object",
            "properties": {
                "accuracy": {
                    "$ref": "#/definitions/base.DvDuration"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "base.DvDuration": {
            "type": "object",
            "properties": {
                "accuracy": {},
                "accuracy_is_percent": {
                    "type": "boolean"
                },
                "magnitude_status": {
                    "type": "boolean"
                },
                "normal_range": {
                    "$ref": "#/definitions/base.Interval"
                },
                "normal_status": {
                    "$ref": "#/definitions/base.CodePhrase"
                },
                "other_reference_ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/base.ReferenceRange"
                    }
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "base.DvIdentifier": {
            "type": "object",
            "properties": {
                "assigner": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "base.DvText": {
            "type": "object",
            "properties": {
                "_type": {
                    "type": "string"
                },
                "encoding": {
                    "$ref": "#/definitions/base.CodePhrase"
                },
                "formatting": {
                    "type": "string"
                },
                "hyperlink": {
                    "$ref": "#/definitions/base.DvUri"
                },
                "language": {
                    "$ref": "#/definitions/base.CodePhrase"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/base.TermMapping"
                    }
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "base.DvUri": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "base.Interval": {
            "type": "object",
            "properties": {
                "lower": {},
                "lower_included": {
                    "type": "boolean"
                },
                "lower_unbounded": {
                    "type": "boolean"
                },
                "upper": {},
                "upper_included": {
                    "type": "boolean"
                },
                "upper_unbounded": {
                    "type": "boolean"
                }
            }
        },
        "base.Link": {
            "type": "object",
            "properties": {
                "meaning": {
                    "$ref": "#/definitions/base.DvText"
                },
                "target": {
                    "$ref": "#/definitions/base.DvUri"
                },
                "type": {
                    "$ref": "#/definitions/base.DvText"
                }
            }
        },
        "base.Locatable": {
            "type": "object",
            "properties": {
                "Pathable": {},
                "_type": {
                    "type": "string"
                },
                "archetype_details": {
                    "$ref": "#/definitions/base.Archetyped"
                },
                "archetype_node_id": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/base.Link"
                    }
                },
                "name": {
                    "$ref": "#/definitions/base.DvText"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "base.ObjectRef": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "base.Participation": {
            "type": "object",
            "properties": {
                "function": {
                    "$ref": "#/definitions/base.DvText"
                },
                "mode": {
                    "$ref": "#/definitions/base.DvCodedText"
                },
                "performer": {
                    "$ref": "#/definitions/base.PartyProxy"
                },
                "time": {
                    "$ref": "#/definitions/base.Interval"
                }
            }
        },
        "base.PartyIdentified": {
            "type": "object",
            "properties": {
                "external_ref": {
                    "$ref": "#/definitions/base.ObjectRef"
                },
                "identifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/base.DvIdentifier"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "base.PartyProxy": {
            "type": "object",
            "properties": {
                "external_ref": {
                    "$ref": "#/definitions/base.ObjectRef"
                }
            }
        },
        "base.ReferenceRange": {
            "type": "object",
            "properties": {
                "meaning": {
                    "type": "string"
                },
                "range": {
                    "$ref": "#/definitions/base.Interval"
                }
            }
        },
        "base.TermMapping": {
            "type": "object",
            "properties": {
                "match": {
                    "type": "integer"
                },
                "purpose": {
                    "$ref": "#/definitions/base.DvCodedText"
                },
                "target": {
                    "$ref": "#/definitions/base.CodePhrase"
                }
            }
        },
        "model.Composition": {
            "type": "object",
            "properties": {
                "Pathable": {},
                "_type": {
                    "type": "string"
                },
                "archetype_details": {
                    "$ref": "#/definitions/base.Archetyped"
                },
                "archetype_node_id": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/base.DvCodedText"
                },
                "composer": {
                    "$ref": "#/definitions/base.PartyProxy"
                },
                "content": {
                    "type": "array",
                    "items": {}
                },
                "context": {
                    "$ref": "#/definitions/model.EventContext"
                },
                "language": {
                    "$ref": "#/definitions/base.CodePhrase"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/base.Link"
                    }
                },
                "name": {
                    "$ref": "#/definitions/base.DvText"
                },
                "territory": {
                    "$ref": "#/definitions/base.CodePhrase"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.EhrStatusUpdate": {
            "type": "object",
            "properties": {
                "_type": {
                    "type": "string"
                },
                "archetype_node_id": {
                    "type": "string"
                },
                "is_modifiable": {
                    "type": "boolean"
                },
                "is_queryable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    }
                },
                "other_details": {
                    "type": "object",
                    "properties": {
                        "_type": {
                            "type": "string"
                        },
                        "archetype_node_id": {
                            "type": "string"
                        },
                        "items": {
                            "type": "array",
                            "items": {}
                        },
                        "name": {
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "subject": {
                    "type": "object",
                    "properties": {
                        "external_ref": {
                            "$ref": "#/definitions/model.ExternalRef"
                        }
                    }
                },
                "uid": {
                    "type": "object",
                    "properties": {
                        "_type": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "model.EhrSummary": {
            "type": "object",
            "properties": {
                "ehr_access": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "namespace": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "ehr_id": {
                    "type": "string"
                },
                "ehr_status": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "namespace": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "system_id": {
                    "type": "string"
                },
                "time_created": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "model.EventContext": {
            "type": "object",
            "properties": {
                "end_time": {
                    "$ref": "#/definitions/base.DvDateTime"
                },
                "health_care_facility": {
                    "$ref": "#/definitions/base.PartyIdentified"
                },
                "location": {
                    "type": "string"
                },
                "other_context": {
                    "$ref": "#/definitions/base.Locatable"
                },
                "participations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/base.Participation"
                    }
                },
                "setting": {
                    "$ref": "#/definitions/base.DvCodedText"
                },
                "start_time": {
                    "$ref": "#/definitions/base.DvDateTime"
                }
            }
        },
        "model.ExternalRef": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}